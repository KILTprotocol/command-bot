# Default values for try-runtime.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  pullPolicy: Always

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: enable
  className: ""
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-http01
    external-dns.alpha.kubernetes.io/target: traefik-external.parity-chains.parity.io.
    kubernetes.io/ingress.class: traefik-external
    traefik.ingress.kubernetes.io/router.entrypoints: web,websecure
    traefik.ingress.kubernetes.io/router.tls: "true"
  hosts:
    - host: try-runtime.parity.io
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls:
    - secretName: try-runtime.parity.io
      hosts:
        - try-runtime.parity.io

# As of this writing (2021-07-29) the Substrate runtime compilation *needs* at
# least 4.5G of RAM, otherwise it gets killed due to OOM. Outside of that, the
# bot should not take more than 100mb normally.
# 5G is thus arrived at by (4.5 + 0.1 = 4.6) and rounds up to 5G.
resources:
  requests:
    cpu: 1000m
    memory: 5G
  limits:
    cpu: 1000m
    memory: 5G

# We only want one instance at all times so that the execution queue can be
# sanely tracked across multiple MRs.
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 1

nodeSelector: {}

tolerations: []

affinity: {}

env: {}

persistence:
  enabled: true
  mountPath: ""
  subPath: ""
  annotations: {}
  storageClass: standard
  size: 20G
  accessModes:
    - ReadWriteOnce
